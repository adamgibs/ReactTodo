import moment from 'moment';

import firebase, {firebaseRef} from 'app/firebase/';

export var setSearchText = (searchText) => {
  return {
    type: 'SET_SEARCH_TEXT',
    searchText
  };
};

export var toggleShowCompleted = () => {
  return {
    type: 'TOGGLE_SHOW_COMPLETED'
  };
};

export var addTodo = (todo) => {
  return {
    type: 'ADD_TODO',
    todo
  };
};

//may need to add the addTodos action back in at some point

export var startAddTodo = (text) => {
  return (dispatch, getState) => {
    var todo = {
        text,
        completed: false,
        createdAt: moment().unix(),
        completedAt: null //as opposed to undefined because that's how you remove data in firebase
    };

    var todoRef = firebaseRef.child('todos').push(todo); //creates var for firebase reference and then pushes new todo to datbase

    return todoRef.then(() => { //after pushing to database we dispatch the newly created todo to the reducer by passing it to addTodo.
      dispatch(addTodo({
        ...todo, // We add the todo
        id: todoRef.key // And set the id to the key that is generated by Firebase
      }));
    });
  };
};
export var toggleTodo = (id) => {
  return {
    type: 'TOGGLE_TODO',
    id
  };
};
